package linkedlist_test

import (
	"educative-dsa/common"
	"educative-dsa/linkedlist"
	"fmt"
	"testing"
)

func TestReorderList(t *testing.T) {
	cases := []struct {
		name   string
		list   []int
		output []int
	}{
		{
			name:   "test case 1",
			list:   []int{1, 1, 2, 2, 3, 3, 4, 4},
			output: []int{1, 4, 1, 4, 2, 3, 2, 3},
		},
		{
			name:   "test case 2",
			list:   []int{0, 20, -22, 21, -12},
			output: []int{0, -12, 20, 21, -22},
		},
		{
			name:   "test case 3",
			list:   []int{1, 3, 5, 7, 9, 10, 8, 6, 4, 2},
			output: []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10},
		},
		{
			name:   "test case 4",
			list:   []int{1, 2, 3, 4, 5, 6},
			output: []int{1, 6, 2, 5, 3, 4},
		},
		{
			name:   "test case 5",
			list:   []int{7, 0, 10, 13, 12, 19, 1, 3, 6, 7, 4, 2, 11},
			output: []int{7, 11, 0, 2, 10, 4, 13, 7, 12, 6, 19, 3, 1},
		},
		{
			name:   "test case 6",
			list:   []int{1, 1, 1},
			output: []int{1, 1, 1},
		},
		{
			name:   "test case 7",
			list:   []int{78, 87, 9, 544, 32, 588, -553, 667, 2, -896, 434, 0, 1, 2, 35, 67, -90, 43, 56, 787, 444, 56, 78, 56, 35, 455, 30, 789, 32, -68, 45, 78, 9, 544, 32, 588, -553, 667, 2, 4, 553, 667, 2, 4, 3, 445, 4, 5, 6, 553, 667, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, -66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, -588, 553, -667, 2, 3, 445, 66, 24, 56, 85, 32, 78, 45, 32, 789, 32, 68, 93, 681, 23, 68, 11, 5, 78, 1, 45, 89, 35, 24, 56, -85, 32, 78, -666, 12, 3, 44, 56, 355, 567, 1, 2, 3, 4, 5, 356, 900, 78, 43, 23, 56, 34, 55, 544, 999, -345, 612},
			output: []int{78, 612, 87, -345, 9, 999, 544, 544, 32, 55, 588, 34, -553, 56, 667, 23, 2, 43, -896, 78, 434, 900, 0, 356, 1, 5, 2, 4, 35, 3, 67, 2, -90, 1, 43, 567, 56, 355, 787, 56, 444, 44, 56, 3, 78, 12, 56, -666, 35, 78, 455, 32, 30, -85, 789, 56, 32, 24, -68, 35, 45, 89, 78, 45, 9, 1, 544, 78, 32, 5, 588, 11, -553, 68, 667, 23, 2, 681, 4, 93, 553, 68, 667, 32, 2, 789, 4, 32, 3, 45, 445, 78, 4, 32, 5, 85, 6, 56, 553, 24, 667, 66, 2, 445, 4, 3, 3, 2, 2, -667, 3, 553, 8, -588, 90, 32, 4, 544, 23, 9, 455, 78, 78, 455, 9, 23, -66, 677, 78, 55, 43, 34, 23, 56, 55, 434, 677, 896},
		},
		{
			name:   "test case 8",
			list:   []int{2, 3, 4, 5, 6, 2, 3, 8, 90, 4, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 4, 3, 445, 66, 78, 43, 23, 56, 34, 55, 677, 896, 434, 0, 1, 2, 35, 67, 90, 43, 56, 787, 444, 56, 78, 56, 35, 24, 56, 85, 32, 78, 45, 32, 789, 32, 68, 45, 93, 68, 45, 89, 444, 788, 534, 789, 46, 6, 666, 355, 567, 356, 900, 544, 999, 345, 612},
			output: []int{2, 612, 3, 345, 4, 999, 5, 544, 6, 900, 2, 356, 3, 567, 8, 355, 90, 666, 4, 6, 23, 46, 455, 789, 78, 534, 9, 788, 544, 444, 32, 89, 588, 45, 553, 68, 667, 93, 2, 45, 4, 68, 3, 32, 445, 789, 66, 32, 78, 45, 43, 78, 23, 32, 56, 85, 34, 56, 55, 24, 677, 35, 896, 56, 434, 78, 0, 56, 1, 444, 2, 787, 35, 56, 67, 43, 90},
		},
		{
			name:   "test case 9",
			list:   []int{553, 667, 2, 4, 3, 445, 4, 5, 6, 553, 667, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 896, 434, 0, 1, 2, 35, 67, 90, 43, 56, 787, 444, 56, 78, 56, 35, 455, 30, 789, 32, 68, 45, 78, 9, 544, 32, 588, 553, 667, 2, 4, 553, 667, 2, 4, 3, 445, 4, 5, 6, 553, 667, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 3, 445, 66, 24, 56, 85, 32, 78, 45, 32, 789, 32, 68, 93, 681, 23, 68, 11, 5, 78, 1, 45, 89, 35, 24, 56, 85, 32, 78, 45, 32, 444, 788, 534, 16, 34, 68, 32, 13, 789, 46, 6, 60, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 896, 434, 0, 1, 2, 35, 67, 90, 43, 56, 787, 444, 56, 78, 56, 35, 455, 30, 789, 32, 68, 45, 78, 9, 544, 32, 588, 553, 667, 2, 4, 553, 667, 2, 4, 3, 445, 4, 5, 6, 553, 667, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 3, 445, 66, 24, 56, 85, 32, 78, 45, 32, 789, 32, 68, 93, 681, 23, 68, 11, 5, 78, 1, 45, 89, 35, 24, 56, 85, 32, 78, 78, 9, 544, 32, 588, 553, 667, 2, 896, 434, 0, 1, 2, 35, 67, 90, 43, 56, 787, 444, 56, 78, 56, 35, 455, 30, 789, 32, 68, 45, 78, 9, 544, 32, 588, 553, 667, 2, 4, 553, 667, 2, 4, 3, 445, 4, 5, 6, 553, 667, 2, 4, 3, 2, 3, 8, 90, 4, 23, 455, 78, 9, 66, 78, 43, 23, 55, 677, 896, 434, 56, 34, 55, 677, 23, 455, 78, 9, 544, 32, 588, 553, 667, 2, 3, 445, 66, 24, 56, 85, 32, 78, 45, 32, 789, 32, 68, 93, 681, 23, 68, 11, 5, 78, 1, 45, 89, 35, 24, 56, 85, 32, 78, 666, 12, 3, 44, 56, 355, 567, 1, 2, 3, 4, 5, 356, 900, 78, 43, 23, 56, 34, 55, 544, 999, 345, 612},
			output: []int{553, 612, 667, 345, 2, 999, 4, 544, 3, 55, 445, 34, 4, 56, 5, 23, 6, 43, 553, 78, 667, 900, 2, 356, 4, 5, 3, 4, 2, 3, 3, 2, 8, 1, 90, 567, 4, 355, 23, 56, 455, 44, 78, 3, 9, 12, 66, 666, 78, 78, 43, 32, 23, 85, 55, 56, 677, 24, 896, 35, 434, 89, 56, 45, 34, 1, 55, 78, 677, 5, 23, 11, 455, 68, 78, 23, 9, 681, 544, 93, 32, 68, 588, 32, 553, 789, 667, 32, 2, 45, 896, 78, 434, 32, 0, 85, 1, 56, 2, 24, 35, 66, 67, 445, 90, 3, 43, 2, 56, 667, 787, 553, 444, 588, 56, 32, 78, 544, 56, 9, 35, 78, 455, 455, 30, 23, 789, 677, 32, 55, 68, 34, 45, 56, 78, 434, 9, 896, 544, 677, 32, 55, 588, 23, 553, 43, 667, 78, 2, 66, 4, 9, 553, 78, 667, 455, 2, 23, 4, 4, 3, 90, 445, 8, 4, 3, 5, 2, 6, 3, 553, 4, 667, 2, 2, 667, 4, 553, 3, 6, 2, 5, 3, 4, 8, 445, 90, 3, 4, 4, 23, 2, 455, 667, 78, 553, 9, 4, 66, 2, 78, 667, 43, 553, 23, 588, 55, 32, 677, 544, 896, 9, 434, 78, 56, 45, 34, 68, 55, 32, 677, 789, 23, 30, 455, 455, 78, 35, 9, 56, 544, 78, 32, 56, 588, 444, 553, 787, 667, 56, 2, 43, 3, 90, 445, 67, 66, 35, 24, 2, 56, 1, 85, 0, 32, 434, 78, 896, 45, 2, 32, 667, 789, 553, 32, 588, 68, 32, 93, 544, 681, 9, 23, 78, 68, 78, 11, 32, 5, 85, 78, 56, 1, 24, 45, 35, 89, 89, 35, 45, 24, 1, 56, 78, 85, 5, 32, 11, 78, 68, 45, 23, 32, 681, 444, 93, 788, 68, 534, 32, 16, 789, 34, 32, 68, 45, 32, 78, 13, 32, 789, 85, 46, 56, 6, 24, 60, 66, 4, 445, 3, 3, 2, 2, 3, 667, 8, 553, 90, 588, 4, 32, 23, 544, 455, 9, 78, 78, 9, 455, 66, 23, 78, 677, 43, 55, 23, 34, 55, 56, 677, 434, 896, 896, 434, 677, 56, 55, 34, 23, 55, 43, 677, 78, 23, 66, 455, 9, 2, 78, 4, 455, 3, 23, 2, 4, 3, 90, 8, 8, 90, 3, 4, 2, 23, 3, 455, 4, 78, 2, 9, 667, 66, 553, 78, 6, 43, 5, 23, 4, 55, 445, 677, 3, 896, 4, 434, 2, 56, 667, 34, 553, 55, 4, 677, 2, 23, 667, 455, 553, 78, 588, 9, 32, 544, 544, 32, 9, 588, 78, 553, 45, 667, 68, 2, 32, 896, 789, 434, 30, 0, 455, 1, 35, 2, 56, 35, 78, 67, 56, 90, 444, 43, 787, 56},
		},
	}

	for k, f := range linkedlist.ReorderList {
		t.Run(k, func(t *testing.T) {
			for _, c := range cases {
				l := &common.LinkedList{}
				l.InsertFromList(c.list)
				f(l)

				if fmt.Sprint(l) != fmt.Sprint(c.output) {
					t.Errorf(
						"in %q with list %v, expected %v; got %v ",
						c.name,
						c.list,
						c.output,
						l,
					)
				}
			}
		})

	}
}
